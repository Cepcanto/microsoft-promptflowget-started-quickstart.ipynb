name: Build Doc CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - preview/docs
    paths:
      - 'README.md'
      - 'docs/**'
      - 'scripts/docs/**'
      - '.github/workflows/build_doc_ci.yml'
      - 'src/promptflow/promptflow/**'

env:
  packageSetupType: promptflow_with_extra
  testWorkingDirectory: ${{ github.workspace }}/src/promptflow

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Python Setup
      uses: "./.github/actions/step_create_python_environment"
    - name: Build wheel
      uses: "./.github/actions/step_sdk_setup"
      with:
        setupType: ${{ env.packageSetupType }}
        scriptPath: ${{ env.testWorkingDirectory }}
    - name: Upload Wheel
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: wheel
        path: |
          ${{ github.workspace }}/src/promptflow/dist/*.whl
          ${{ github.workspace }}/src/promptflow-tools/dist/*.whl
          ${{ github.workspace }}/src/promptflow-tracing/dist/*.whl

  build_doc_job:
    needs: build
    runs-on: windows-latest
    name: Build Doc
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Python Setup
        uses: "./.github/actions/step_create_python_environment"

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: wheel
          path: artifacts

      - name: Install wheel
        shell: pwsh
        working-directory: artifacts
        run: |
          Set-PSDebug -Trace 1
          pip install -r ${{ github.workspace }}/src/promptflow/dev_requirements.txt
          gci ./promptflow -Recurse | % {if ($_.Name.Contains('.whl')) {python -m pip install "$($_.FullName)[azure,executable,azureml-serving,executor-service]"}}
          gci ./promptflow-tools -Recurse | % {if ($_.Name.Contains('.whl')) {python -m pip install $_.FullName}}
          gci ./promptflow-tracing -Recurse | % {if ($_.Name.Contains('.whl')) {python -m pip install --force-reinstall $_.FullName}}
          pip freeze

      - name: Build doc with reference doc
        shell: powershell
        working-directory: scripts/docs/
        run: |-
          pip install langchain
          ./doc_generation.ps1 -WithReferenceDoc:$true -WarningAsError:$true 

  # Note: We have this job separately because some error may missing when build link check exists.
  link_check_job:
    runs-on: windows-latest
    name: Build Link Check
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build LinkCheck
        shell: powershell
        working-directory: scripts/docs/
        run: ./doc_generation.ps1 -BuildLinkCheck -WarningAsError:$true
