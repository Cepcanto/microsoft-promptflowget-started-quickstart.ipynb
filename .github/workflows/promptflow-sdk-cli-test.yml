name: promptflow-sdk-cli-test
on:
  pull_request:
    branches: [ main ]
    paths:
      - src/promptflow/**
      - scripts/**
      - .github/workflows/promptflow-sdk-cli-test.yml
  workflow_dispatch:
env:
  TENANT_ID: "${{ secrets.TENANT_ID }}"
  CLIENT_ID: "${{ secrets.CLIENT_ID }}"
  CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"
  packageSetupType: promptflow_new_extra
  testWorkingDirectory: src/promptflow
jobs:
  sdk_cli_tests:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Display and Set Environment Variables
      run: env | sort >> $GITHUB_OUTPUT
      shell: bash -el {0}
      id: display_env
    - name: Conda Setup
      uses: "./.github/actions/step_create_conda_environment"
    - run: |
        echo ${{ env.packageSetupType }}
        echo ${{ env.testWorkingDirectory }}
      shell: bash -l {0}
    - name: Build wheel
      uses: "./.github/actions/step_sdk_setup"
      with:
        setupType: ${{ env.packageSetupType }}
        scriptPath: ${{ env.testWorkingDirectory }}
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Generate Configs
      uses: "./.github/actions/step_generate_configs"
      with:
        targetFolder: ${{ env.testWorkingDirectory }}
    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores
    - name: Run Test
      shell: bash -l {0}
      working-directory: ${{ env.testWorkingDirectory }}
      run: |-
        set -x -e
        export IS_IN_CI_PIPELINE="true"
        az account show
        conda activate release-env
        export PYTHONPATH=${{ github.workspace }}/src/promptflow
        echo "aaa=bbb" > ${{ github.workspace }}/src/promptflow/tests/test_configs/connections/.env
        echo "ccc=ddd" >> ${{ github.workspace }}/src/promptflow/tests/test_configs/connections/.env
        python "../../scripts/building/run_coverage_tests.py" \
          -p promptflow \
          -t ${{ github.workspace }}/src/promptflow/tests/sdk_cli_azure_test ${{ github.workspace }}/src/promptflow/tests/sdk_cli_test \
          -l eastus \
          -m "unittest or e2etest" \
          -n ${{ steps.cpu-cores.outputs.count }} \
          --coverage-config ${{ github.workspace }}/src/promptflow/tests/sdk_cli_test/.coveragerc
    - name: Upload pytest test results
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results
        path: ${{ env.testWorkingDirectory }}/*.xml
      # Use always() to always run this step to publish test results when there are test failures
    - name: Publish Test Results
      if: always()
      uses: EnricoMi/publish-unit-test-result-action/composite@v2
      with:
        check_name: "SDK CLI Test Result [${{ steps.display_env.outputs.GITHUB_HEAD_REF }}](https://github.com/microsoft/promptflow/actions/workflows/promptflow-sdk-cli-test.yml?query=branch:${{ steps.display_env.outputs.GITHUB_HEAD_REF }}++)"
        comment_title: "SDK CLI Test Result [${{ steps.display_env.outputs.GITHUB_HEAD_REF }}](https://github.com/microsoft/promptflow/actions/workflows/promptflow-sdk-cli-test.yml?query=branch:${{ steps.display_env.outputs.GITHUB_HEAD_REF }}++)"
        files: |
          ${{ env.testWorkingDirectory }}/test-results.xml
    - name: Generate Coverage Report
      if: (success() || failure())
      uses: orgoro/coverage@v3.1
      with:
        coverageFile: ${{ env.testWorkingDirectory }}/coverage.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        thresholdAll: 0.4

    
