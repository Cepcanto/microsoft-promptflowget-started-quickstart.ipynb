name: Create Release Tag
on:
  workflow_dispatch:
    inputs:
      TagVersion:
        description: 'Tag version'
        required: true
        default: 'v1.0.0'
        type: string
      ReleaseName:
        description: 'Release name'
        required: true
        default: 'v1.0.0'
        type: string
      PreRelease:
        description: 'If it is a pre-release'
        required: true
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate release notes
        id: release_notes
        uses: actions/github-script@v4
        with:
          script: |
            const { data } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            # console.log(data)
            const latestRelease = data[0];
            const previousRelease = data[1];
            const commits = await github.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: previousRelease.tag_name,
              head: latestRelease.tag_name,
            });
            let releaseNotes = '';
            commits.data.commits.forEach((commit) => {
              console.log(commit)
              # if (commit.filename.includes('./src/promptflow-tools/')) {
              #   releaseNotes += `- ${commit.commit.message}\n`;
              # }
            });
            console.log(releaseNotes);
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Zip folder
        run: |
          cd src
          zip -r promptflow-tools.zip promptflow-tools
    
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.TagVersion }}
          release_name: ${{ inputs.ReleaseName }}
          body: ${{ steps.release_notes.outputs.result }}
          draft: false
          prerelease: ${{ inputs.PreRelease }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./src/promptflow-tools.zip
          asset_name: promptflow-tools.zip
          asset_content_type: application/zip
